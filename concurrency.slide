Alternative Concurrency Models: From Hello World to Halo

Charles Cochrane
Liberty Team, Go and Java lover

github.com/charlesworth

* Outline

* Test Slide

Here's a test for you, just main:

.play test.go /func main/,

* Quotes:

Quote this:

  We wouldn't even be having this discussion if thread local storage wasn't useful. But every 
  feature comes at a cost, and in my opinion the cost of threadlocals far outweighs their benefits. 
  They're just not a good fit for Go.

  - Andrew Gerrand

Nice quote there

* Who is this guy?
- Programming addict
- C, Java, Ruby, Go
- Director, JoshSoftware
.link http://www.joshsoftware.com/team The JoshSoftware team

* My Prediction
- 1995 Java - at the time, people in India only knew the "Jawa" motorcycle!
- 2005 Ruby - at the time, only Reevik Technologies (now defunct) had started work with Ruby in Pune.
- 2015 Go - JoshSoftware is already into Go!

.image ./test.jpg

* The next decade belongs to Go

In the 1970s, Fortran and Cobol where champions. In the 1980s, we had Pascal and C. In the 1990s, Basic and C++. In the 2000s, Java and C#. In the 2010s we have Ruby and  Python. Why would the years to come be any different?

If history is anything to go by it seems inevitable that a new language will dominate the next decade. A new language will also need to solve problems that matter to this expanded world and that the existing languages will be slow to provide (or find impossible to provide).

Could that new language be Go?
